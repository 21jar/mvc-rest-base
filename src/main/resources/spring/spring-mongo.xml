<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
               http://www.springframework.org/schema/data/mongo
            http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

    <!-- 加载mongodb的属性配置文件 -->
    <!-- spring连接mongodb数据库的配置 -->
    <mongo:mongo replica-set="${mongo.hostPort}" id="mongo">
        <mongo:options connections-per-host="${mongo.connectionsPerHost}"
                       threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                       connect-timeout="${mongo.connectTimeout}"
                       auto-connect-retry="${mongo.autoConnectRetry}"
                       max-wait-time="${mongo.maxWaitTime}"
                       socket-timeout="${mongo.socketTimeout}"
                       socket-keep-alive="${mongo.socketKeepAlive}"/>
    </mongo:mongo>
    <!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 -->
    <mongo:db-factory id="mongoDbFactory" dbname="${mongo.dbname}" mongo-ref="mongo"/>
    <!-- 只要使用这个调用相应的方法操作 -->
    <!--<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">-->
    <!--<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>-->
    <!--</bean>-->
    <!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
    <mongo:repositories base-package="com.ainijar.dao"/>

    <!--插入数据去除class-->
    <bean id="mappingContext" class="org.springframework.data.mongodb.core.mapping.MongoMappingContext"/>
    <bean id="defaultMongoTypeMapper" class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">
        <constructor-arg name="typeKey">
            <null/>
        </constructor-arg>
    </bean>
    <bean id="mappingMongoConverter" class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
        <constructor-arg name="mappingContext" ref="mappingContext"/>
        <property name="typeMapper" ref="defaultMongoTypeMapper"/>
    </bean>
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
        <constructor-arg name="mongoConverter" ref="mappingMongoConverter"/>
    </bean>
    <!--插入数据去除class止-->

    <!--全国数据库-->
    <!--<bean id="userCredentials" class="org.springframework.data.authentication.UserCredentials">-->
        <!--<constructor-arg name="username" value="${mongoAll.username}"/>-->
        <!--<constructor-arg name="password" value="${mongoAll.password}"/>-->
    <!--</bean>-->
    <!--<mongo:mongo replica-set="${mongoAll.hostPort}" id="mongoAll">-->
        <!--<mongo:options connections-per-host="${mongoAll.connectionsPerHost}"-->
                       <!--threads-allowed-to-block-for-connection-multiplier="${mongoAll.threadsAllowedToBlockForConnectionMultiplier}"-->
                       <!--connect-timeout="${mongoAll.connectTimeout}"-->
                       <!--auto-connect-retry="${mongoAll.autoConnectRetry}"-->
                       <!--max-wait-time="${mongoAll.maxWaitTime}"-->
                       <!--socket-timeout="${mongoAll.socketTimeout}"-->
                       <!--socket-keep-alive="${mongoAll.socketKeepAlive}"/>-->
    <!--</mongo:mongo>-->
    <!--<mongo:db-factory id="mongoAllDbFactory" dbname="${mongoAll.dbname}" mongo-ref="mongoAll"/>-->
    <!--<bean id="mongoAllTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">-->
        <!--<constructor-arg name="mongo" ref="mongoAll"/>-->
        <!--<constructor-arg name="databaseName" value="${mongoAll.dbname}" />-->
        <!--&lt;!&ndash;数据库用户名密码 TODO&ndash;&gt;-->
        <!--&lt;!&ndash;<constructor-arg name="userCredentials" ref="userCredentials" />&ndash;&gt;-->
    <!--</bean>-->

</beans>